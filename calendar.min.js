let icalTemplate="https://api.twitch.tv/helix/schedule/icalendar?broadcaster_id={id}",params=new URLSearchParams(window.location.search),broadcaster_id=params.get("user_id"),color=params.get("color")??"924afe";color=decodeURIComponent(color),color.startsWith("#")||(color=`#${color}`);const calendarInstance=new calendarJs("calendar",{manualEditingEnabled:!1,fullScreenModeEnabled:!0,openInFullScreenMode:!0,isWidget:"true"==params.get("widget")??!1});async function loadFeed(broadcaster_id,color){let req=await fetch(icalTemplate.replace("{id}",broadcaster_id));if(200!=req.status)return;let icalText=await req.text(),icalParsed=ICAL.parse(icalText),compData=new ICAL.Component(icalParsed),name=compData.getFirstPropertyValue("name"),vevents=compData.getAllSubcomponents("vevent");const events=[];vevents.forEach(vevent=>{const event=new ICAL.Event(vevent);let duration=event.endDate.toJSDate()-event.startDate.toJSDate();""==event.summary&&(event.summary="A Stream");let next,expand=new ICAL.RecurExpansion({component:vevent,dtstart:vevent.getFirstPropertyValue("dtstart")}),counter=0;for(;counter<52&&(next=expand.next());){counter++;let end=next.toJSDate();end.setMilliseconds(end.getMilliseconds()+duration),events.push({title:event.summary,from:next.toJSDate(),to:end,color:color,url:`https://twitch.tv/${name.toLowerCase()}`,locked:!0})}}),calendarInstance.addEvents(events),calendarInstance.setOptions({organizerName:name})}let token="";if(broadcaster_id)loadFeed(broadcaster_id,color);else{if(calendar.style.display="none",creator.style.display="block",document.location.hash&&""!=document.location.hash){var parsedHash=new URLSearchParams(window.location.hash.slice(1));token=parsedHash.get("access_token"),authenticate.style.display="none",lookup.style.display="inline-block",window.location="#"}let url=new URL("https://id.twitch.tv/oauth2/authorize");url.search=new URLSearchParams([["client_id","hozgh446gdilj5knsrsxxz8tahr3koz"],["redirect_uri",`${window.location.origin}/twitchCalendar/`],["response_type","token"]]),authenticate.addEventListener("click",e=>{e.preventDefault(),window.location=url}),lookup.addEventListener("click",async e=>{e.preventDefault();let login=user_id.value,u=new URL("https://api.twitch.tv/helix/users");u.search=new URLSearchParams([["login",login]]);let req=await fetch(u,{method:"GET",headers:{Accept:"application/json","Client-ID":"hozgh446gdilj5knsrsxxz8tahr3koz",Authorization:`Bearer ${token}`}});if(200!=req.status)return;let{data:data}=await req.json();if(1!=data.length)return;let id=data[0].id;user_id.value=id})}
